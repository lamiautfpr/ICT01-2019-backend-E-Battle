openapi: 3.0.3
info:
  title: Ebattle Api
  description: Api para integração de uma plataforma web com o projeto ICT01-2019 E-Battle que, por sua vez, é um jogo educacional que tem como objetivo estimular o aprendizado em sala de aula por meio da competição saudável entre os jogadores.
  version: 1.0.0
servers:
  - url: 'https://api.ebattle.lamia-edu.com/{{env}}'
paths:
  /register:
    post:
      tags:
        - Authentication
      description: Registra um usuário no sistema
      operationId: register
      requestBody:
        description: Dados de registro
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      responses:
        '200':
          description: Usuário registrado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
  /login:
    post:
      tags:
        - Authentication
      description: Autentica um usuário no sistema
      operationId: login
      requestBody:
        description: Dados de autenticação
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        '200':
          description: Usuário autenticado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /categories:
    get:
      tags:
        - Creation options
      description: Retorna as categorias do jogo
      operationId: getCategories
      responses:
        '200':
          description: Lista de categorias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesResponse'
      security:
        - authToken: [ ]
  /languages:
    get:
      tags:
        - Creation options
      description: Retorna as linguages
      operationId: getLanguages
      responses:
        '200':
          description: Lista linguagens
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguagesResponse'
      security:
        - authToken: [ ]
  /matches:
    get:
      tags:
        - Matches
      description: Retorna um match de acordo com o id
      operationId: getMatch
      responses:
        '200':
          description: Retorna o match de um game
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchesResponse'
      security:
        - authToken: []
  /matches/start:
    post:
      tags:
        - Matches
      description: Inicia um match
      operationId: startMatch
      requestBody:
        description: Dados do match a ser criado
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
        required: true
      responses:
        '200':
          description: Match realizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchesResponse'
      security:
        - authToken: [ ]
  /games:
    get:
      tags:
        - Games
        - Unity
      description: Retorna os jogos do usuario
      operationId: getGames
      parameters:
        - name: id
          in: query
          description: Id do game a ser deletado
          required: true
          schema:
            type: number
            example: 1
      responses:
        '200':
          description: Lista de jogos
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GamesResponse'
                  - $ref: '#/components/schemas/Game'
      security:
        - authToken: [ ]
    post:
      tags:
        - Games
      description: Cria um novo game do usuario
      operationId: createGame
      requestBody:
        description: Dados do jogo a ser criado
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
        required: true
      responses:
        '200':
          description: Game criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GamesResponse'
      security:
        - authToken: [ ]
    delete:
      tags:
        - Games
      description: Deleta um jogo do usuario
      operationId: deleteGames
      parameters:
        - name: id
          in: query
          description: Id do game a ser deletado
          required: true
          schema:
            type: number
            example: 1
      responses:
        '200':
          description: Game excluido
      security:
        - authToken: [ ]
components:
  securitySchemes:
    authToken:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    Register:
      type: object
      properties:
        name:
          type: string
          description: Email do usuário
          example: 'teste@gmail.com'
        email:
          type: string
          description: Email do usuário
          example: 'teste@gmail.com'
        password:
          type: string
          description: Senha do usuário
          example: '123456'
        institution:
          type: string
          description: Instituição do usuário
          example: "Universidade Tecnológica Federal do Swagger"
        city:
          type: string
          description: Cidade do usuario
          example: "Santa helena"
        workType:
          type: string
          description: Tipo de trabalho
          example: "Estudante"
        educationLevel:
          type: string
          description: Nivel educacional
          example: "Ensino medio completo"
      required:
        - name
        - email
        - password
        - institution
        - city
        - workType
        - educationLevel
    Login:
      type: object
      properties:
        email:
          type: string
          description: Email do usuário
          example: 'teste@gmail.com'
        password:
          type: string
          description: Senha do usuário
          example: '123456'
      required:
        - email
        - password
    RegisterResponse:
      type: object
      properties:
        id:
          type: integer
          description: ID do usuário
          example: 1
        name:
          type: string
          description: Nome do usuário
          example: 'Teste'
        email:
          type: string
          description: Email do usuário
          example: 'teste@gmail.com'
    LoginResponse:
      type: object
      properties:
        name:
          type: string
          description: Nome do usuário
          example: 'Teste'
        email:
          type: string
          description: Email do usuário
          example: 'teste@gmail.com'
        token:
          type: string
          description: Token de autenticação
          example: '9a4450f20304bb601af1d7a62bc450b15479bcd1364a96cabd0da1eb5c4bb667155d236e7677ef320213b78ca9c2bfae02083e5992360801e3fc50b3b55bf07d'
    CategoriesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Category'
    LanguagesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Language'
    GamesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Game'
    MatchesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Match'
    Category:
      type: object
      properties:
        id:
          type: integer
          description: Id da categoria
          example: 1
        name:
          type: string
          description: Nome da categoria
          example: 'Geografia'
    Language:
      type: object
      properties:
        id:
          type: integer
          description: Id da linguagem
          example: 1
        name:
          type: string
          description: Nome da linguagem
          example: 'Portugues'
    Match:
      type: object
      properties:
        id:
          type: integer
          description: Id do match
          example: 1
        game:
          type: integer
          description: id do game do match
          example: 12
        groups:
          type: array
          description: grupos
          items:
            $ref: '#/components/schemas/itensGroups'
        trivia:
          type: boolean
          example: false
        random:
          type: boolean
          example: false
      required:
        - id
        - game
        - groups
    itensGroups:
      type: object
      properties:
        name:
          type: string
          description: nome do grupo
          example: grupo 1
        players:
          type: string
          description: nome dos jogadores
          example:
            - "Erik"
            - "Ronaldo"
            - "Armando"
            - "Gustavo"
      required:
        - name
        - players
    Game:
      type: object
      properties:
        id:
          type: integer
          description: Id do jogo
          example: 1
        language:
          type: integer
          description: Id do idioma
          example: 1
        category:
          type: integer
          description: Id da categoria
          example: 1
        name:
          type: string
          description: Nome do jogo
          example: Jogo 1
        questions:
          type: array
          description: Questões presentes no jogo
          items:
            $ref: '#/components/schemas/itensQuestions'
      required:
        - id
        - language
        - category
        - name
        - questions
    itensQuestions:
      type: object
      properties:
        text:
          type: string
          description: Questão do game
          example: Quanto é 1 + 1
        answers:
          type: string
          description: Respostas do jogo
          example:
            - "1"
            - "2"
            - "3"
            - "4"
        answer:
          type: integer
          description: index da posição onde se encontra a resposta do jogo
          example: 1
        time:
          type: integer
          description: Tempo em segundos para a resposta
          example: 60
      required:
        - text
        - answers
        - answer
        - time